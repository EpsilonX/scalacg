scala.collection.mutable.StringBuilder: +=(x: Char)
org.kiama.example.oberon0.L1.c.CIfElseStatement: <init>(cond: org.kiama.example.oberon0.base.c.CExpression,tstmt: org.kiama.example.oberon0.base.c.CStatement,estmt: org.kiama.example.oberon0.base.c.CStatement)
org.kiama.example.oberon0.L0.c.CAddExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.output.LeftAssoc: <init>()
org.kiama.example.iswim.secd.IOOps.Read: <init>()
org.kiama.example.oberon0.L3.CCodeGenerator.$anonfun: <init>()
org.kiama.example.oberon0.L0.CCodeGenerator.$anonfun: <init>()
org.kiama.example.oberon0.L0.c.CEqExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.COrExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.CBinaryExpression: <init>(op: String)
org.kiama.example.oberon0.L0.c.CGtExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L1.source.PrettyPrinter.$anonfun: <init>()
org.kiama.output.NonAssoc: <init>()
org.kiama.example.oberon0.L3.c.CAddrExp: <init>(exp: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.CNotExp: <init>(exp: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L1.c.CWhileStatement: <init>(cond: org.kiama.example.oberon0.base.c.CExpression,stmt: org.kiama.example.oberon0.base.c.CStatement)
org.kiama.example.iswim.secd.SECDBase.PrimValue: <init>(bdy: List[org.kiama.example.iswim.secd.SECDBase.Instruction])
org.kiama.example.oberon0.L0.c.CDivExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L3.c.CDerefExp: <init>(exp: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L4.c.CRecordType: <init>(fields: List[org.kiama.example.oberon0.base.c.CVarDecl])
org.kiama.example.oberon0.L0.c.CTypeDef: <init>(decl: org.kiama.example.oberon0.base.c.CVarDecl)
org.kiama.example.oberon0.L3.c.CCall: <init>(s: String,ps: List[org.kiama.example.oberon0.base.c.CExpression])
org.kiama.example.oberon0.L1.CCodeGenerator.$anonfun: <init>()
org.kiama.example.oberon0.L4.c.CFieldExp: <init>(record: org.kiama.example.oberon0.base.c.CExpression,field: String)
org.kiama.example.oberon0.L0.c.CInitDecl: <init>(decl: org.kiama.example.oberon0.base.c.CVarDecl,e: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L2.TypeAnalyser.$anonfun: <init>()
org.kiama.example.oberon0.L0.c.CNeExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.output.Prefix: <init>()
org.kiama.example.oberon0.L0.c.CLtExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L1.c.CIfStatement: <init>(cond: org.kiama.example.oberon0.base.c.CExpression,tstmt: org.kiama.example.oberon0.base.c.CStatement)
org.kiama.example.oberon0.L0.c.CAndExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.base.c.CEmptyStmt: <init>()
org.kiama.example.oberon0.L4.c.PrettyPrinter.$anonfun: <init>()
scala.collection.immutable.IndexedSeq: <init>()
org.kiama.example.oberon0.L0.c.CSubExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L3.c.CStrExp: <init>(s: String)
org.kiama.example.oberon0.L4.CCodeGenerator.$anonfun: <init>()
org.kiama.example.oberon0.L0.c.CLeExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.CModExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L4.c.CIndexExp: <init>(array: org.kiama.example.oberon0.base.c.CExpression,index: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.CMulExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.CAssignment: <init>(desig: org.kiama.example.oberon0.base.c.CExpression,exp: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L0.c.CGeExp: <init>(left: org.kiama.example.oberon0.base.c.CExpression,right: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.example.oberon0.L3.c.CAddrType: <init>(basetype: org.kiama.example.oberon0.base.c.CType)
org.kiama.example.oberon0.L0.c.CNegExp: <init>(exp: org.kiama.example.oberon0.base.c.CExpression)
org.kiama.output.Postfix: <init>()
org.kiama.example.oberon0.L1.TypeAnalyser.$anonfun: <init>()
org.kiama.example.oberon0.L0.c.CUnaryExpression: <init>()
org.kiama.example.oberon0.L0.c.CIdnExp: <init>(i: String)
org.kiama.output.Side: <init>()
scala.collection.mutable.StringBuilder: <init>()
org.kiama.output.RightAssoc: <init>()
org.kiama.example.oberon0.L0.Desugarer.$anonfun.$anonfun: <init>()
org.kiama.example.oberon0.L3.c.CVoidType: <init>()
org.kiama.example.oberon0.L0.Desugarer.$anonfun: <init>()
org.kiama.example.iswim.secd.IOOps.Write: <init>()
org.kiama.example.oberon0.L4.CCodeGenerator.$anonfun: apply(x0$1: CCodeGenerator.this.Field)
org.kiama.example.oberon0.L0.Desugarer.$anonfun: apply()
org.kiama.output.PrettyPrinterBase.$anonfun: apply(x$24: PrettyPrinterBase.this.Doc,x$25: PrettyPrinterBase.this.Doc)
org.kiama.example.oberon0.L1.CCodeGenerator.$anonfun: apply(x$3: org.kiama.example.oberon0.L0.source.Expression, org.kiama.example.oberon0.base.source.Block)
org.kiama.example.oberon0.L3.CCodeGenerator.$anonfun: apply(d: org.kiama.example.oberon0.base.source.Declaration)
org.kiama.example.oberon0.L1.CCodeGenerator.$anonfun: apply(b: org.kiama.example.oberon0.base.source.Block)
org.kiama.example.oberon0.L1.source.PrettyPrinter.$anonfun: apply(ei: org.kiama.example.oberon0.L0.source.Expression, org.kiama.example.oberon0.base.source.Block)
org.kiama.example.oberon0.L4.TypeAnalyser.$anonfun: apply(n: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.L0.TypeAnalyser.$anonfun: apply(n: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.L0.CCodeGenerator.$anonfun: apply(x0$1: org.kiama.example.oberon0.base.source.IdnDef)
org.kiama.example.oberon0.L1.TypeAnalyser.$anonfun: apply(n: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.L1.CCodeGenerator.$anonfun: apply(check$ifrefutable$1: org.kiama.example.oberon0.L0.source.Expression, org.kiama.example.oberon0.base.source.Block)
org.kiama.example.oberon0.L3.CCodeGenerator.$anonfun: apply(x0$1: CCodeGenerator.this.ParamInfo)
org.kiama.example.oberon0.L3.TypeAnalyser.$anonfun: apply(e: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.iswim.secd.StringOps.$anonfun: apply(c: Char)
org.kiama.example.oberon0.L4.c.PrettyPrinter.$anonfun: apply(n: org.kiama.example.oberon0.base.c.CASTNode)
org.kiama.example.oberon0.L3.CCodeGenerator.$anonfun: apply(s: org.kiama.example.oberon0.base.source.Statement)
org.kiama.example.oberon0.L1.CCodeGenerator.$anonfun: apply()
org.kiama.example.oberon0.L3.CCodeGenerator.$anonfun: apply(i: Int)
org.kiama.example.oberon0.L1.source.PrettyPrinter.$anonfun: apply()
scala.collection.mutable.StringBuilder: apply(index: Int)
org.kiama.example.oberon0.L1.source.PrettyPrinter.$anonfun: apply(b: org.kiama.example.oberon0.base.source.Block)
org.kiama.output.PrettyPrinterBase.$anonfun: apply(x$22: PrettyPrinterBase.this.Doc,x$23: PrettyPrinterBase.this.Doc)
org.kiama.example.oberon0.L2.TypeAnalyser.$anonfun: apply(n: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.L0.Desugarer.$anonfun.$anonfun: applyOrElse([A1, B1 >: Any]x1: A1,default: A1 => B1)
org.kiama.example.oberon0.L4.c.CIndexExp: array()
org.kiama.example.oberon0.base.c.PrettyPrinter: arraydimensToDoc(t1: org.kiama.example.oberon0.base.c.CArrayType)
org.kiama.example.oberon0.L0.Parser: assignment()
org.kiama.example.oberon0.L3.c.CAddrType: basetype()
org.kiama.example.oberon0.L3.c.PrettyPrinter: basetypeToDoc(t: org.kiama.example.oberon0.base.c.CType)
org.kiama.example.oberon0.L4.c.PrettyPrinter: basetypeToDoc(t: org.kiama.example.oberon0.base.c.CType)
org.kiama.example.oberon0.L0.c.PrettyPrinter: basetypeToDoc(t: org.kiama.example.oberon0.base.c.CType)
org.kiama.example.oberon0.base.c.PrettyPrinter: basetypeToDoc(t: org.kiama.example.oberon0.base.c.CType)
org.kiama.example.iswim.secd.SECDBase.PrimValue: bdy()
org.kiama.example.oberon0.L0.source.PrettyPrinter: blockToDoc$default$2()
org.kiama.output.ParenPrettyPrinter: bracket(inner: org.kiama.output.PrettyOperatorExpression,outer: org.kiama.output.PrettyOperatorExpression,side: org.kiama.output.Side)
scala.collection.immutable.IndexedSeq: canBuildFrom([A])
org.kiama.example.oberon0.L4.c.CRecordType: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CLeExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CSubExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CNegExp: canEqual(x$1: Any)
org.kiama.output.RightAssoc: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CNotExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CNeExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L3.c.CStrExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CAddExp: canEqual(x$1: Any)
org.kiama.example.oberon0.base.c.CEmptyStmt: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CGeExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L3.c.CVoidType: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CIdnExp: canEqual(x$1: Any)
org.kiama.output.LeftAssoc: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CLtExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L4.c.CFieldExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CAndExp: canEqual(x$1: Any)
org.kiama.example.iswim.secd.IOOps.Write: canEqual(x$1: Any)
org.kiama.example.iswim.secd.SECDBase.PrimValue: canEqual(x$1: Any)
org.kiama.example.oberon0.L3.c.CCall: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CGtExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L4.c.CIndexExp: canEqual(x$1: Any)
org.kiama.output.Prefix: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CAssignment: canEqual(x$1: Any)
org.kiama.example.iswim.secd.IOOps.Read: canEqual(x$1: Any)
org.kiama.output.Postfix: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CInitDecl: canEqual(x$1: Any)
org.kiama.example.oberon0.L3.c.CDerefExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CEqExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.COrExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CTypeDef: canEqual(x$1: Any)
org.kiama.example.oberon0.L1.c.CIfStatement: canEqual(x$1: Any)
org.kiama.output.NonAssoc: canEqual(x$1: Any)
org.kiama.example.oberon0.L3.c.CAddrExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CDivExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CMulExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L3.c.CAddrType: canEqual(x$1: Any)
org.kiama.example.oberon0.L1.c.CWhileStatement: canEqual(x$1: Any)
org.kiama.example.oberon0.L0.c.CModExp: canEqual(x$1: Any)
org.kiama.example.oberon0.L1.c.CIfElseStatement: canEqual(x$1: Any)
scala.collection.mutable.StringBuilder: charAt(index: Int)
org.kiama.example.oberon0.L1.c.CIfStatement: cond()
org.kiama.example.oberon0.L1.c.CIfElseStatement: cond()
org.kiama.example.oberon0.L1.c.CWhileStatement: cond()
org.kiama.example.oberon0.L0.c.CInitDecl: decl()
org.kiama.example.oberon0.L0.c.CTypeDef: decl()
org.kiama.example.oberon0.L0.c.CAssignment: desig()
org.kiama.example.oberon0.L0.c.CInitDecl: e()
org.kiama.example.oberon0.L1.Parser: elsif()
org.kiama.example.oberon0.L1.source.PrettyPrinter: elsifToDoc(ei: org.kiama.example.oberon0.L0.source.Expression, org.kiama.example.oberon0.base.source.Block)
org.kiama.example.oberon0.L1.Parser: elsifs()
org.kiama.output.PrettyPrinterBase: equal()
org.kiama.example.oberon0.L3.c.CCall: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CAssignment: equals(x$1: Any)
org.kiama.example.oberon0.L3.c.CAddrType: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CTypeDef: equals(x$1: Any)
org.kiama.example.iswim.secd.SECDBase.PrimValue: equals(that: Any)
org.kiama.example.oberon0.L0.c.CNegExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.COrExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CLtExp: equals(x$1: Any)
org.kiama.example.iswim.secd.IOOps.Read: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CSubExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CAndExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CGtExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CMulExp: equals(x$1: Any)
org.kiama.example.oberon0.L4.c.CIndexExp: equals(x$1: Any)
org.kiama.example.oberon0.L3.c.CVoidType: equals(x$1: Any)
org.kiama.example.oberon0.L1.c.CIfStatement: equals(x$1: Any)
org.kiama.example.oberon0.L4.c.CRecordType: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CInitDecl: equals(x$1: Any)
org.kiama.example.oberon0.L4.c.CFieldExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CEqExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CDivExp: equals(x$1: Any)
org.kiama.example.oberon0.base.c.CEmptyStmt: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CNeExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CLeExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CIdnExp: equals(x$1: Any)
org.kiama.example.oberon0.L3.c.CAddrExp: equals(x$1: Any)
org.kiama.example.oberon0.L3.c.CDerefExp: equals(x$1: Any)
org.kiama.example.iswim.secd.IOOps.Write: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CNotExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CAddExp: equals(x$1: Any)
org.kiama.example.oberon0.L3.c.CStrExp: equals(x$1: Any)
org.kiama.example.oberon0.L1.c.CWhileStatement: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CModExp: equals(x$1: Any)
org.kiama.example.oberon0.L0.c.CGeExp: equals(x$1: Any)
org.kiama.example.oberon0.L1.c.CIfElseStatement: equals(x$1: Any)
org.kiama.example.oberon0.L1.c.CIfElseStatement: estmt()
org.kiama.example.oberon0.L3.c.CDerefExp: exp()
org.kiama.example.oberon0.L0.c.CAssignment: exp()
org.kiama.example.oberon0.L0.c.CNotExp: exp()
org.kiama.example.oberon0.L3.c.CAddrExp: exp()
org.kiama.example.oberon0.L0.c.CNegExp: exp()
org.kiama.example.oberon0.L0.TypeAnalyser: exptype()
org.kiama.example.oberon0.L1.TypeAnalyser: exptypeDef()
org.kiama.example.oberon0.L2.TypeAnalyser: exptypeDef()
org.kiama.example.oberon0.L3.TypeAnalyser: exptypeDef()
org.kiama.example.oberon0.L4.TypeAnalyser: exptypeDef()
org.kiama.example.oberon0.L0.TypeAnalyser: exptypeDef()
org.kiama.output.ParenPrettyPrinter: fi()
org.kiama.example.oberon0.L4.c.CFieldExp: field()
org.kiama.example.oberon0.L4.c.CRecordType: fields()
org.kiama.example.oberon0.L0.source.SumExpression: fixity()
org.kiama.example.oberon0.L0.c.CBinaryExpression: fixity()
org.kiama.example.oberon0.L0.source.ProdExpression: fixity()
org.kiama.example.oberon0.L0.source.RelationalExpression: fixity()
org.kiama.example.oberon0.L0.c.CUnaryExpression: fixity()
org.kiama.output.ParenPrettyPrinter: fo()
org.kiama.example.iswim.secd.SECDBase.PrimValue: getType()
org.kiama.output.LeftAssoc: hashCode()
org.kiama.example.oberon0.L0.c.CIdnExp: hashCode()
org.kiama.example.oberon0.L4.c.CIndexExp: hashCode()
org.kiama.example.oberon0.L0.c.CAddExp: hashCode()
org.kiama.example.oberon0.L0.c.CAndExp: hashCode()
org.kiama.output.RightAssoc: hashCode()
org.kiama.example.oberon0.L0.c.COrExp: hashCode()
org.kiama.example.oberon0.L0.c.CNeExp: hashCode()
org.kiama.example.oberon0.L0.c.CMulExp: hashCode()
org.kiama.example.oberon0.L1.c.CIfElseStatement: hashCode()
org.kiama.example.iswim.secd.IOOps.Write: hashCode()
org.kiama.example.oberon0.L0.c.CSubExp: hashCode()
org.kiama.example.oberon0.L0.c.CLeExp: hashCode()
org.kiama.output.Prefix: hashCode()
org.kiama.example.oberon0.L1.c.CWhileStatement: hashCode()
org.kiama.example.oberon0.L1.c.CIfStatement: hashCode()
org.kiama.example.oberon0.L4.c.CFieldExp: hashCode()
org.kiama.example.oberon0.L0.c.CDivExp: hashCode()
org.kiama.example.iswim.secd.IOOps.Read: hashCode()
org.kiama.example.oberon0.L0.c.CAssignment: hashCode()
org.kiama.example.oberon0.L0.c.CGeExp: hashCode()
org.kiama.example.oberon0.L3.c.CStrExp: hashCode()
org.kiama.example.oberon0.L3.c.CVoidType: hashCode()
org.kiama.example.oberon0.L0.c.CLtExp: hashCode()
org.kiama.example.oberon0.L0.c.CTypeDef: hashCode()
org.kiama.output.NonAssoc: hashCode()
org.kiama.example.oberon0.L0.c.CGtExp: hashCode()
org.kiama.example.oberon0.L0.c.CNegExp: hashCode()
org.kiama.example.oberon0.L3.c.CDerefExp: hashCode()
org.kiama.example.oberon0.L0.c.CModExp: hashCode()
org.kiama.example.oberon0.L3.c.CAddrType: hashCode()
org.kiama.example.oberon0.L3.c.CAddrExp: hashCode()
org.kiama.example.oberon0.base.c.CEmptyStmt: hashCode()
org.kiama.example.oberon0.L0.c.CInitDecl: hashCode()
org.kiama.example.oberon0.L4.c.CRecordType: hashCode()
org.kiama.example.iswim.secd.SECDBase.PrimValue: hashCode()
org.kiama.example.oberon0.L3.c.CCall: hashCode()
org.kiama.output.Postfix: hashCode()
org.kiama.example.oberon0.L0.c.CNotExp: hashCode()
org.kiama.example.oberon0.L0.c.CEqExp: hashCode()
org.kiama.output.PrettyPrinterBase: hcat(ds: Seq[PrettyPrinterBase.this.Doc])
org.kiama.example.oberon0.L0.c.CIdnExp: i()
org.kiama.example.oberon0.L1.Parser: ifStatement()
org.kiama.example.oberon0.L1.source.PrettyPrinter: ifToDoc(s: org.kiama.example.oberon0.L1.source.IfStatement)
org.kiama.example.oberon0.L4.c.CIndexExp: index()
org.kiama.example.oberon0.L0.TypeAnalyser: isCompatible(tipe: TypeAnalyser.this.Type,exptype: TypeAnalyser.this.Type)
org.kiama.example.oberon0.L4.TypeAnalyser: isCompatible(tipe: TypeAnalyser.this.Type,exptype: TypeAnalyser.this.Type)
org.kiama.example.oberon0.L0.Desugarer.$anonfun.$anonfun: isDefinedAt(x1: Any)
org.kiama.example.oberon0.L0.c.CDivExp: left()
org.kiama.example.oberon0.L0.c.CLtExp: left()
org.kiama.example.oberon0.L0.c.COrExp: left()
org.kiama.example.oberon0.L0.c.CGtExp: left()
org.kiama.example.oberon0.L0.c.CNeExp: left()
org.kiama.example.oberon0.L0.c.CGeExp: left()
org.kiama.example.oberon0.L0.c.CAndExp: left()
org.kiama.example.oberon0.L0.c.CSubExp: left()
org.kiama.example.oberon0.L0.c.CEqExp: left()
org.kiama.example.oberon0.L0.c.CAddExp: left()
org.kiama.example.oberon0.L0.c.CLeExp: left()
org.kiama.example.oberon0.L0.c.CModExp: left()
org.kiama.example.oberon0.L0.c.CMulExp: left()
scala.collection.mutable.StringBuilder: length()
org.kiama.output.PrettyPrinterBase: lterm(ds: Seq[PrettyPrinterBase.this.Doc],term: PrettyPrinterBase.this.Doc)
org.kiama.example.oberon0.L0.CCodeGenerator: mangle(s: String)
org.kiama.example.oberon0.L0.Desugarer: nameOf(i: org.kiama.example.oberon0.base.source.Identifier,isdef: Boolean)
org.kiama.output.ParenPrettyPrinter: noparens(inner: org.kiama.output.PrettyOperatorExpression,outer: org.kiama.output.PrettyOperatorExpression,side: org.kiama.output.Side)
org.kiama.example.oberon0.L0.c.CBinaryExpression: op()
org.kiama.example.oberon0.L3.c.CAddrExp: op()
org.kiama.example.oberon0.L0.c.CNotExp: op()
org.kiama.example.oberon0.L0.c.CNegExp: op()
org.kiama.example.oberon0.L3.c.CDerefExp: op()
org.kiama.example.oberon0.L3.TypeAnalyser: paramtype(u: org.kiama.example.oberon0.base.source.IdnUse,i: Int)
org.kiama.example.iswim.driver.SECD: primTable()
org.kiama.example.oberon0.L3.c.CDerefExp: priority()
org.kiama.example.oberon0.L0.c.CLeExp: priority()
org.kiama.example.oberon0.L0.c.CAddExp: priority()
org.kiama.example.oberon0.L0.c.CGeExp: priority()
org.kiama.example.oberon0.L0.c.CLtExp: priority()
org.kiama.example.oberon0.L0.c.CSubExp: priority()
org.kiama.example.oberon0.L0.c.CDivExp: priority()
org.kiama.example.oberon0.L0.source.RelationalExpression: priority()
org.kiama.example.oberon0.L0.c.COrExp: priority()
org.kiama.example.oberon0.L0.c.CEqExp: priority()
org.kiama.example.oberon0.L0.c.CNotExp: priority()
org.kiama.example.oberon0.L0.c.CNeExp: priority()
org.kiama.example.oberon0.L0.source.SumExpression: priority()
org.kiama.example.oberon0.L0.c.CMulExp: priority()
org.kiama.example.oberon0.L0.c.CAndExp: priority()
org.kiama.example.oberon0.L0.c.CModExp: priority()
org.kiama.example.oberon0.L0.c.CGtExp: priority()
org.kiama.example.oberon0.L3.c.CAddrExp: priority()
org.kiama.example.oberon0.L0.c.CNegExp: priority()
org.kiama.example.oberon0.L0.source.ProdExpression: priority()
org.kiama.example.oberon0.L0.c.CNeExp: productArity()
org.kiama.output.LeftAssoc: productArity()
org.kiama.example.oberon0.L4.c.CFieldExp: productArity()
org.kiama.example.oberon0.L0.c.COrExp: productArity()
org.kiama.example.iswim.secd.IOOps.Write: productArity()
org.kiama.example.oberon0.L0.c.CInitDecl: productArity()
org.kiama.example.oberon0.L0.c.CNotExp: productArity()
org.kiama.output.Postfix: productArity()
org.kiama.example.oberon0.L0.c.CLtExp: productArity()
org.kiama.example.oberon0.L0.c.CLeExp: productArity()
org.kiama.example.oberon0.L1.c.CIfStatement: productArity()
org.kiama.example.oberon0.L4.c.CIndexExp: productArity()
org.kiama.example.oberon0.L0.c.CSubExp: productArity()
org.kiama.example.oberon0.L1.c.CWhileStatement: productArity()
org.kiama.example.iswim.secd.SECDBase.PrimValue: productArity()
org.kiama.example.oberon0.L3.c.CCall: productArity()
org.kiama.example.oberon0.L0.c.CGeExp: productArity()
org.kiama.output.RightAssoc: productArity()
org.kiama.example.iswim.secd.IOOps.Read: productArity()
org.kiama.example.oberon0.L3.c.CDerefExp: productArity()
org.kiama.example.oberon0.L0.c.CTypeDef: productArity()
org.kiama.example.oberon0.L0.c.CNegExp: productArity()
org.kiama.example.oberon0.L0.c.CModExp: productArity()
org.kiama.example.oberon0.L3.c.CVoidType: productArity()
org.kiama.example.oberon0.L0.c.CAddExp: productArity()
org.kiama.example.oberon0.L3.c.CAddrType: productArity()
org.kiama.example.oberon0.L0.c.CMulExp: productArity()
org.kiama.example.oberon0.L0.c.CAndExp: productArity()
org.kiama.example.oberon0.L0.c.CAssignment: productArity()
org.kiama.example.oberon0.L4.c.CRecordType: productArity()
org.kiama.example.oberon0.L0.c.CDivExp: productArity()
org.kiama.output.NonAssoc: productArity()
org.kiama.example.oberon0.L1.c.CIfElseStatement: productArity()
org.kiama.example.oberon0.L0.c.CGtExp: productArity()
org.kiama.example.oberon0.L3.c.CAddrExp: productArity()
org.kiama.example.oberon0.L0.c.CIdnExp: productArity()
org.kiama.output.Prefix: productArity()
org.kiama.example.oberon0.base.c.CEmptyStmt: productArity()
org.kiama.example.oberon0.L3.c.CStrExp: productArity()
org.kiama.example.oberon0.L0.c.CEqExp: productArity()
org.kiama.output.Postfix: productElement(x$1: Int)
org.kiama.example.oberon0.L1.c.CIfStatement: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CTypeDef: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CNegExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CModExp: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CVoidType: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CDivExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CMulExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CGeExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CGtExp: productElement(x$1: Int)
org.kiama.example.oberon0.base.c.CEmptyStmt: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CSubExp: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CDerefExp: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CCall: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CLeExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CNeExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CAssignment: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CIdnExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CAndExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CNotExp: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CAddrType: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CInitDecl: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CAddExp: productElement(x$1: Int)
org.kiama.example.oberon0.L4.c.CFieldExp: productElement(x$1: Int)
org.kiama.example.oberon0.L4.c.CRecordType: productElement(x$1: Int)
org.kiama.example.iswim.secd.IOOps.Read: productElement(x$1: Int)
org.kiama.output.RightAssoc: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CLtExp: productElement(x$1: Int)
org.kiama.example.oberon0.L1.c.CIfElseStatement: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CStrExp: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.CEqExp: productElement(x$1: Int)
org.kiama.output.LeftAssoc: productElement(x$1: Int)
org.kiama.example.oberon0.L4.c.CIndexExp: productElement(x$1: Int)
org.kiama.example.iswim.secd.SECDBase.PrimValue: productElement(x$1: Int)
org.kiama.example.oberon0.L1.c.CWhileStatement: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CAddrExp: productElement(x$1: Int)
org.kiama.output.Prefix: productElement(x$1: Int)
org.kiama.example.iswim.secd.IOOps.Write: productElement(x$1: Int)
org.kiama.output.NonAssoc: productElement(x$1: Int)
org.kiama.example.oberon0.L0.c.COrExp: productElement(x$1: Int)
org.kiama.example.oberon0.L3.c.CStrExp: productIterator()
org.kiama.output.LeftAssoc: productIterator()
org.kiama.example.oberon0.L0.c.CInitDecl: productIterator()
org.kiama.example.oberon0.L1.c.CIfStatement: productIterator()
org.kiama.example.oberon0.L0.c.CLtExp: productIterator()
org.kiama.example.oberon0.L1.c.CWhileStatement: productIterator()
org.kiama.output.Prefix: productIterator()
org.kiama.example.oberon0.L4.c.CRecordType: productIterator()
org.kiama.example.oberon0.L0.c.CLeExp: productIterator()
org.kiama.example.oberon0.L3.c.CCall: productIterator()
org.kiama.output.RightAssoc: productIterator()
org.kiama.example.iswim.secd.IOOps.Write: productIterator()
org.kiama.output.Postfix: productIterator()
org.kiama.example.oberon0.L0.c.CAndExp: productIterator()
org.kiama.example.oberon0.L3.c.CAddrExp: productIterator()
org.kiama.example.iswim.secd.IOOps.Read: productIterator()
org.kiama.example.oberon0.L0.c.CAssignment: productIterator()
org.kiama.example.oberon0.L0.c.CGeExp: productIterator()
org.kiama.example.oberon0.L0.c.CAddExp: productIterator()
org.kiama.example.oberon0.L3.c.CDerefExp: productIterator()
org.kiama.example.oberon0.L0.c.CGtExp: productIterator()
org.kiama.example.oberon0.L0.c.COrExp: productIterator()
org.kiama.output.NonAssoc: productIterator()
org.kiama.example.oberon0.L0.c.CDivExp: productIterator()
org.kiama.example.oberon0.L0.c.CNeExp: productIterator()
org.kiama.example.oberon0.L1.c.CIfElseStatement: productIterator()
org.kiama.example.oberon0.base.c.CEmptyStmt: productIterator()
org.kiama.example.oberon0.L0.c.CTypeDef: productIterator()
org.kiama.example.oberon0.L0.c.CNegExp: productIterator()
org.kiama.example.oberon0.L0.c.CEqExp: productIterator()
org.kiama.example.oberon0.L0.c.CIdnExp: productIterator()
org.kiama.example.oberon0.L3.c.CVoidType: productIterator()
org.kiama.example.oberon0.L3.c.CAddrType: productIterator()
org.kiama.example.oberon0.L0.c.CSubExp: productIterator()
org.kiama.example.oberon0.L4.c.CFieldExp: productIterator()
org.kiama.example.iswim.secd.SECDBase.PrimValue: productIterator()
org.kiama.example.oberon0.L0.c.CMulExp: productIterator()
org.kiama.example.oberon0.L0.c.CModExp: productIterator()
org.kiama.example.oberon0.L0.c.CNotExp: productIterator()
org.kiama.example.oberon0.L4.c.CIndexExp: productIterator()
org.kiama.example.oberon0.L3.c.CStrExp: productPrefix()
org.kiama.example.oberon0.L3.c.CDerefExp: productPrefix()
org.kiama.example.oberon0.L0.c.COrExp: productPrefix()
org.kiama.output.Prefix: productPrefix()
org.kiama.example.oberon0.L0.c.CDivExp: productPrefix()
org.kiama.example.oberon0.L4.c.CIndexExp: productPrefix()
org.kiama.output.Postfix: productPrefix()
org.kiama.example.oberon0.L3.c.CCall: productPrefix()
org.kiama.example.oberon0.L0.c.CTypeDef: productPrefix()
org.kiama.example.oberon0.L0.c.CAndExp: productPrefix()
org.kiama.example.oberon0.L0.c.CEqExp: productPrefix()
org.kiama.example.iswim.secd.IOOps.Write: productPrefix()
org.kiama.example.oberon0.L1.c.CIfStatement: productPrefix()
org.kiama.example.oberon0.L0.c.CGeExp: productPrefix()
org.kiama.example.oberon0.L0.c.CSubExp: productPrefix()
org.kiama.example.oberon0.L1.c.CIfElseStatement: productPrefix()
org.kiama.example.oberon0.L0.c.CAddExp: productPrefix()
org.kiama.output.LeftAssoc: productPrefix()
org.kiama.example.oberon0.L0.c.CLtExp: productPrefix()
org.kiama.example.oberon0.L0.c.CGtExp: productPrefix()
org.kiama.example.iswim.secd.IOOps.Read: productPrefix()
org.kiama.example.oberon0.L0.c.CNotExp: productPrefix()
org.kiama.example.oberon0.L0.c.CModExp: productPrefix()
org.kiama.example.oberon0.L4.c.CFieldExp: productPrefix()
org.kiama.example.oberon0.L1.c.CWhileStatement: productPrefix()
org.kiama.output.RightAssoc: productPrefix()
org.kiama.example.oberon0.L0.c.CNeExp: productPrefix()
org.kiama.example.iswim.secd.SECDBase.PrimValue: productPrefix()
org.kiama.example.oberon0.L0.c.CMulExp: productPrefix()
org.kiama.example.oberon0.L3.c.CAddrType: productPrefix()
org.kiama.example.oberon0.L0.c.CAssignment: productPrefix()
org.kiama.example.oberon0.L0.c.CInitDecl: productPrefix()
org.kiama.example.oberon0.L0.c.CLeExp: productPrefix()
org.kiama.example.oberon0.base.c.CEmptyStmt: productPrefix()
org.kiama.example.oberon0.L0.c.CIdnExp: productPrefix()
org.kiama.example.oberon0.L3.c.CVoidType: productPrefix()
org.kiama.output.NonAssoc: productPrefix()
org.kiama.example.oberon0.L4.c.CRecordType: productPrefix()
org.kiama.example.oberon0.L0.c.CNegExp: productPrefix()
org.kiama.example.oberon0.L3.c.CAddrExp: productPrefix()
org.kiama.example.oberon0.L3.c.CCall: ps()
org.kiama.example.oberon0.L4.c.CFieldExp: record()
org.kiama.example.oberon0.L0.c.CMulExp: right()
org.kiama.example.oberon0.L0.c.CAddExp: right()
org.kiama.example.oberon0.L0.c.CModExp: right()
org.kiama.example.oberon0.L0.c.CEqExp: right()
org.kiama.example.oberon0.L0.c.CGeExp: right()
org.kiama.example.oberon0.L0.c.CSubExp: right()
org.kiama.example.oberon0.L0.c.CGtExp: right()
org.kiama.example.oberon0.L0.c.CNeExp: right()
org.kiama.example.oberon0.L0.c.CLeExp: right()
org.kiama.example.oberon0.L0.c.CAndExp: right()
org.kiama.example.oberon0.L0.c.COrExp: right()
org.kiama.example.oberon0.L0.c.CDivExp: right()
org.kiama.example.oberon0.L0.c.CLtExp: right()
org.kiama.example.oberon0.L3.c.CStrExp: s()
org.kiama.example.oberon0.L3.c.CCall: s()
org.kiama.example.oberon0.L1.c.CWhileStatement: stmt()
scala.collection.mutable.StringBuilder: subSequence(start: Int,end: Int)
org.kiama.example.oberon0.L0.c.CGeExp: toString()
org.kiama.example.oberon0.L3.c.CAddrType: toString()
org.kiama.example.oberon0.L3.c.CAddrExp: toString()
org.kiama.example.oberon0.L3.c.CStrExp: toString()
org.kiama.output.Prefix: toString()
org.kiama.output.Postfix: toString()
org.kiama.example.oberon0.L0.c.CLeExp: toString()
org.kiama.example.oberon0.L0.c.CIdnExp: toString()
org.kiama.example.oberon0.L0.c.CAndExp: toString()
org.kiama.example.oberon0.L0.c.CNeExp: toString()
scala.collection.mutable.StringBuilder: toString()
org.kiama.example.oberon0.L1.c.CWhileStatement: toString()
org.kiama.example.oberon0.L0.c.CDivExp: toString()
org.kiama.example.oberon0.L3.c.CDerefExp: toString()
org.kiama.output.NonAssoc: toString()
org.kiama.output.LeftAssoc: toString()
org.kiama.example.oberon0.L0.c.CAddExp: toString()
org.kiama.example.oberon0.L0.c.CGtExp: toString()
org.kiama.example.oberon0.L1.c.CIfStatement: toString()
org.kiama.example.oberon0.L0.c.CNotExp: toString()
org.kiama.example.oberon0.L0.c.CInitDecl: toString()
org.kiama.example.oberon0.L4.c.CRecordType: toString()
org.kiama.example.oberon0.L0.c.CLtExp: toString()
org.kiama.output.RightAssoc: toString()
org.kiama.example.oberon0.L0.c.CNegExp: toString()
org.kiama.example.oberon0.L0.c.CAssignment: toString()
org.kiama.example.iswim.secd.IOOps.Read: toString()
org.kiama.example.oberon0.L3.c.CVoidType: toString()
org.kiama.example.oberon0.L0.c.CEqExp: toString()
org.kiama.example.oberon0.L3.c.CCall: toString()
org.kiama.example.oberon0.base.c.CEmptyStmt: toString()
org.kiama.example.oberon0.L0.c.CModExp: toString()
org.kiama.example.oberon0.L1.c.CIfElseStatement: toString()
org.kiama.example.oberon0.L4.c.CIndexExp: toString()
org.kiama.example.oberon0.L0.c.COrExp: toString()
org.kiama.example.iswim.secd.SECDBase.PrimValue: toString()
org.kiama.example.oberon0.L0.c.CTypeDef: toString()
org.kiama.example.oberon0.L4.c.CFieldExp: toString()
org.kiama.example.oberon0.L0.c.CMulExp: toString()
org.kiama.example.iswim.secd.IOOps.Write: toString()
org.kiama.example.oberon0.L0.c.CSubExp: toString()
org.kiama.example.oberon0.L4.CCodeGenerator: translate(e: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.L3.CCodeGenerator: translate(s: org.kiama.example.oberon0.base.source.Statement)
org.kiama.example.oberon0.L1.CCodeGenerator: translate(eis: List[org.kiama.example.oberon0.L0.source.Expression, org.kiama.example.oberon0.base.source.Block)
org.kiama.example.oberon0.L0.CCodeGenerator: translate(e: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.L0.CCodeGenerator: translate(s: org.kiama.example.oberon0.base.source.Statement)
org.kiama.example.oberon0.L0.CCodeGenerator: translate(d: org.kiama.example.oberon0.base.source.Declaration)
org.kiama.example.oberon0.L3.CCodeGenerator: translate(d: org.kiama.example.oberon0.base.source.Declaration)
org.kiama.example.oberon0.L4.CCodeGenerator: translate(t: CCodeGenerator.this.Type)
org.kiama.example.oberon0.L3.CCodeGenerator: translate(e: org.kiama.example.oberon0.L0.source.Expression)
org.kiama.example.oberon0.base.CCodeGenerator: translate(s: org.kiama.example.oberon0.base.source.Statement)
org.kiama.example.oberon0.L1.CCodeGenerator: translate(s: org.kiama.example.oberon0.base.source.Statement)
org.kiama.example.oberon0.L3.CCodeGenerator: translateActualParam(p: org.kiama.example.oberon0.L0.source.Expression,mode: org.kiama.example.oberon0.L3.source.Mode)
org.kiama.example.oberon0.L4.CCodeGenerator: translateActualParam(p: org.kiama.example.oberon0.L0.source.Expression,mode: org.kiama.example.oberon0.L3.source.Mode)
org.kiama.example.oberon0.L3.CCodeGenerator: translateActualParams(u: org.kiama.example.oberon0.base.source.IdnUse,ps: List[org.kiama.example.oberon0.L0.source.Expression])
org.kiama.example.oberon0.L3.CCodeGenerator: translateFormalParam(m: org.kiama.example.oberon0.L3.source.Mode,i: String,t: CCodeGenerator.this.Type)
org.kiama.example.oberon0.L4.CCodeGenerator: translateFormalParam(m: org.kiama.example.oberon0.L3.source.Mode,i: String,t: CCodeGenerator.this.Type)
org.kiama.example.oberon0.L3.CCodeGenerator: translateFormalParams(p: org.kiama.example.oberon0.base.source.IdnDef)
org.kiama.example.oberon0.L1.c.CIfStatement: tstmt()
org.kiama.example.oberon0.L1.c.CIfElseStatement: tstmt()
org.kiama.example.iswim.secd.StringOps: unescape(s: String)
org.kiama.example.oberon0.L0.Desugarer: uniquifyNames(m: org.kiama.example.oberon0.base.source.ModuleDecl)
org.kiama.example.oberon0.L1.Parser: whileStatement()

