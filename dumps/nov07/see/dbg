see.values.Container: call(s: see.Scope,args: see.values.Val) ===> see.values.Table: map(mapf: see.values.Val => see.values.Val)
see.values.Container: call(s: see.Scope,args: see.values.Val) ===> see.values.Table.Empty: map(mapf: see.values.Val => see.values.Val)
see.values.Container: coerce() ===> see.values.Assoc: map(mapf: see.values.Val => see.values.Val)

see.values.Val: toBig() ===> see.values.BigR: selType()
see.values.Val: toBig() ===> see.values.Lint: selType()
see.values.Val: toBig() ===> see.values.Real: selType()
see.values.Val: toBig() ===> see.values.BigI: selType()

see.values.Val: toDouble() ===> see.values.Lint: selType()
see.values.Val: toDouble() ===> see.values.Real: selType()
see.values.Val: toDouble() ===> see.values.BigR: selType()
see.values.Val: toDouble() ===> see.values.BigI: selType()

see.values.Container: toLong() ===> see.values.Table.Empty: size()
see.values.Val: toLong() ===> see.values.BigR: selType()
see.values.Val: toLong() ===> see.values.Vector: selType()
see.values.Val: toLong() ===> see.values.Lint: selType()
see.values.Container: toLong() ===> see.values.Vector.Empty: size()
see.values.Val: toLong() ===> see.values.ValMap: selType()
see.values.Val: toLong() ===> see.values.Assoc: selType()
see.values.Val: toLong() ===> see.values.Table: selType()
see.values.Container: toLong() ===> see.values.ValMap.Empty: size()
see.values.Val: toLong() ===> see.values.Real: selType()
see.values.Val: toLong() ===> see.values.BigI: selType()

see.values.Val: toStr() ===> see.values.Vector.Empty: toString()
see.values.Val: toStr() ===> see.values.SymVal: toString()
see.values.Val: toStr() ===> see.values.Assoc: toString()
see.values.Val: toStr() ===> see.values.Table.Empty: toString()
see.values.Val: toStr() ===> see.values.BigI: toString()
see.values.Val: toStr() ===> see.values.Table: toString()
see.values.Val: toStr() ===> see.values.Str: toString()
see.values.Val: toStr() ===> see.values.ValMap.Empty: toString()
see.values.Scalar: toStr() ===> see.values.Str: toString()
see.values.Scalar: toStr() ===> see.values.Rexp: toString()
see.values.Val: toStr() ===> see.values.ValMap: toString()
see.values.Val: toStr() ===> see.values.Vector: toString()
see.values.Val: toStr() ===> see.values.Rexp: toString()
see.values.Val: toStr() ===> see.values.BigR: toString()
see.values.Val: toStr() ===> see.values.Scalar: toString()

see.values.Scalar: toString() ===> see.values.BigR: v()
see.values.Scalar: toString() ===> see.values.Str: v()
see.values.Scalar: toString() ===> see.values.Rexp: v()
see.values.Scalar: toString() ===> see.values.BigI: v()