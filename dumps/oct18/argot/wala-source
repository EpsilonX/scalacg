===========================================================================
Missing call edges in local/dist/tca-this-super/argot/callgraph.gxl.gzip:
===========================================================================
0.0 org.clapper.argot.ArgotParser: checkForMultiParam(param: org.clapper.argot.Parameter[_]) ===> org.clapper.argot.Parameter: name()
0.04340277777777779 org.clapper.argot.Conversions: parseNum([T]s: String,parse: ) ===> scala.collection.mutable.StringBuilder: append(Ljava/lang/Object;)
0.09085648148148147 org.clapper.argot.ArgotParser.$anonfun: apply(x$1: String) ===> scala.Predef$: augmentString(Ljava/lang/String;)
0.10191818181818182 org.clapper.argot.FlagOption: wellDefined() ===> java.lang.Object: equals(Ljava/lang/Object;)
0.12345679012345677 org.clapper.argot.ArgotParser: parseShortOpt(a: List[String]) ===> scala.collection.immutable.StringOps: <init>(Ljava/lang/String;)
0.125 org.clapper.argot.ArgotParser: multiOption([T]names: List[String],valueName: String,description: String,implicit convert: String, org.clapper.argot.MultiValueOption[T]) ===> scala.collection.immutable.List: foreach(Lscala/Function1;)
0.140625 org.clapper.argot.ArgotParser: handleOneOption(key: String) ===> scala.collection.LinearSeqOptimized: apply(I)
0.16618075801749274 org.clapper.argot.ArgotParser.$anonfun: apply(x$1: org.clapper.argot.Parameter[_]) ===> scala.MatchError: <init>(Ljava/lang/Object;)
0.16666666666666666 org.clapper.argot.ArgotParser.$anonfun: apply(x$1: String) ===> scala.collection.mutable.StringBuilder: append(Ljava/lang/String;)
0.1998456790123457 org.clapper.argot.Parameter: $init$() ===> scala.Predef$: require(Z)
0.2 org.clapper.argot.FlagOption: <init>(parent: org.clapper.argot.ArgotParser,namesOn: List[String],namesOff: List[String],description: String,convert: Boolean, org.clapper.argot.FlagOption[T]) ===> scala.collection.TraversableLike: filter(Lscala/Function1;)
0.21627834303326218 org.clapper.argot.ArgotParser: parseShortOpt(a: List[String]) ===> scala.Predef$: assert(Z)
0.24800000000000003 org.clapper.argot.ArgotParser: parseRegularShortOpt(optString: String,optName: String,a: List[String]) ===> scala.collection.immutable.StringOps$: apply$extension(Ljava/lang/String;I)
0.24960000000000002 org.clapper.argot.ArgotParser: parseShortOpt(a: List[String]) ===> scala.collection.immutable.List: take(I)
0.25 org.clapper.argot.ArgotParser: usageString(message: Option[String]) ===> grizzled.string.WordWrapper: <init>(IILjava/lang/String;C)
0.3125 org.clapper.argot.ArgotParser.$anonfun: apply(x$1: String) ===> grizzled.string.WordWrapper: wrap(Ljava/lang/String;)
0.328125 org.clapper.argot.ArgotParser: usageString(message: Option[String]) ===> scala.runtime.BoxesRunTime: unboxToInt(Ljava/lang/Object;)
0.33203125 org.clapper.argot.ArgotParser: parseCompressedShortOpt(optString: String,optName: String,a: List[String]) ===> scala.collection.IndexedSeqOptimized: drop(I)
0.3330078125 org.clapper.argot.ArgotParser: parseCompressedShortOpt(optString: String,optName: String,a: List[String]) ===> scala.runtime.BoxesRunTime: boxToCharacter(C)
0.3333333333333333 org.clapper.argot.ArgotParser: handleOneParameter(p: org.clapper.argot.Parameter[_],maxNameLen: Int) ===> org.clapper.argot.SingleValueArg: supportsMultipleValues()
0.4814814814814815 org.clapper.argot.ArgotParser: handleOneOption(key: String) ===> scala.collection.SeqLike: sortWith(Lscala/Function2;)
0.48669558420050635 org.clapper.argot.ArgotTest: <init>() ===> scala.collection.immutable.List$: apply(Lscala/collection/Seq;)
0.4938271604938272 org.clapper.argot.ArgotParser: parseCompressedShortOpt(optString: String,optName: String,a: List[String]) ===> scala.LowPriorityImplicits: wrapRefArray([Ljava/lang/Object;)
0.49583252367380387 org.clapper.argot.ArgotTest: <init>() ===> scala.Some: <init>(Ljava/lang/Object;)
0.49794238683127573 org.clapper.argot.ArgotParser: replaceOption(opt: org.clapper.argot.CommandLineOption[_]) ===> scala.Predef$ArrowAssoc$: $minus$greater$extension(Ljava/lang/Object;Ljava/lang/Object;)
0.4993141289437586 org.clapper.argot.ArgotParser.$anonfun: apply(x$1: String) ===> scala.Predef$: any2ArrowAssoc(Ljava/lang/Object;)
0.5 org.clapper.argot.Conversions: parseNum([T]s: String,parse: ) ===> org.clapper.argot.ArgotTest$$anonfun$3$$anonfun$1: apply()
0.75 org.clapper.argot.ArgotParser: <init>(programName: String,compactUsage: Boolean,outputWidth: Int,preUsage: Option[String],postUsage: Option[String],sortUsage: Boolean) ===> scala.collection.mutable.Map$: empty()
0.7834020186145554 org.clapper.argot.MultiValueOption: <init>(parent: org.clapper.argot.ArgotParser,names: List[String],valueName: String,description: String,convert: String, org.clapper.argot.MultiValueOption[T]) ===> org.clapper.argot.CommandLineArgument: equals(o: Any)
0.875 org.clapper.argot.SingleValueArg: $init$() ===> org.clapper.argot.SingleValueParameter: org$clapper$argot$SingleValueArg$_setter_$supportsMultipleValues_$eq(Z)
0.9057703704076463 org.clapper.argot.SingleValueArg: $init$() ===> org.clapper.argot.SingleValueArg: optValue_=(x$1: Option[T])
0.9356383682577152 org.clapper.argot.ArgotTest.$anonfun: apply(x$1: Boolean,x$2: org.clapper.argot.FlagOption[Boolean]) ===> scala.runtime.BoxesRunTime: boxToBoolean(Z)
0.9375 org.clapper.argot.MultiValueArg: $init$() ===> org.clapper.argot.MultiValueOption: org$clapper$argot$MultiValueArg$_setter_$supportsMultipleValues_$eq(Z)
0.96875 org.clapper.argot.ArgotParser: usageString(message: Option[String]) ===> scala.Option: foreach(Lscala/Function1;)
0.984375 org.clapper.argot.Conversions: parseNum([T]s: String,parse: ) ===> org.clapper.argot.Conversions$$anonfun$parseInt$1: apply()
0.9882537783585623 org.clapper.argot.ArgotParser: checkMissing(paramSpecs: List[org.clapper.argot.Parameter[_]]) ===> scala.collection.TraversableOnce: mkString(Ljava/lang/String;)
0.9921875 org.clapper.argot.ArgotTest: main(args: Array[String]) ===> scala.Predef$: println(Ljava/lang/Object;)
0.9935772111422841 org.clapper.argot.ArgotTest: main(args: Array[String]) ===> org.clapper.argot.FlagOption: value()
0.99609375 org.clapper.argot.HasValue: $init$() ===> org.clapper.argot.SingleValueOption: org$clapper$argot$HasValue$_setter_$hasValue_$eq(Z)
0.998046875 org.clapper.argot.SingleValueArg: $init$() ===> org.clapper.argot.SingleValueOption: org$clapper$argot$SingleValueArg$_setter_$supportsMultipleValues_$eq(Z)
1.5852084261296506 org.clapper.argot.ArgotTest: main(args: Array[String]) ===> org.clapper.argot.MultiValueArg: value()
1.9764258973300457 org.clapper.argot.ArgotTest: main(args: Array[String]) ===> org.clapper.argot.SingleValueArg: value()
3.5708486940650137 org.clapper.argot.ArgotParser: parseLongOpt(a: List[String]) ===> org.clapper.argot.FlagOption: setByName(name: String)
3.952441433247982 org.clapper.argot.ArgotParser: parseCompressedShortOpt(optString: String,optName: String,a: List[String]) ===> org.clapper.argot.HasValue: setFromString(s: String)
===========================================================================
Number of reachable methods missing in local/dist/tca-this-super/argot/callgraph.gxl.gzip: 140
===========================================================================
