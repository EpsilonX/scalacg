phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$5: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$7: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$depth$3: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectAny$1: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectAny$2: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectAnyInt$1: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectAnyInt$2: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectAnyString$1: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectAnyString$2: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectByType$1$$anonfun$apply$mcV$sp$1: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$injectByType$2: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$lookupByType$1: apply(Ljava/lang/Object;)
phantm.util.API.Writer: typeToXML(typ: phantm.types.Type,widen: phantm.types.Type => phantm.types.Type) ===> phantm.types.TArray$$anonfun$merge$1: apply(Ljava/lang/Object;)