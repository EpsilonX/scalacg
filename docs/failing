Those types appear but do not resolve to any methods. Hmm, weird.
===========================================================================
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TTop: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TBottom: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TInt: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TFloat: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TAnyObject: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TAny: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TString: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TUninitialized: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TBoolean: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TTrue: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TNumeric: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TFalse: toString()
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TNull: toString()

phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TAnyArray: toString() // top-level module
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TUnion: toString() // top-level module
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TFloatLit: toString() // appears without .type 
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TStringLit: toString() // appears without .type
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TArray: toString() // appears without .type
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TObjectTmp: toString() // appears without .type
phantm.types.Type: toText(e: phantm.types.TypeEnvironment) ===> phantm.types.TIntLit: toString() // appears without .type

phantm.types.TTop.type
phantm.types.TBottom.type
phantm.types.TInt.type
phantm.types.TFloat.type
phantm.types.TAnyObject.type
phantm.types.TAny.type
phantm.types.TString.type
phantm.types.TUninitialized.type
phantm.types.TBoolean.type
phantm.types.TTrue.type
phantm.types.TNumeric.type
phantm.types.TFalse.type

