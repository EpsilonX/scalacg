==============================
SuperCallQualified
==============================
Running TCA

Trallala.super.type :: constructor Object :: class Trallala
null :: method $init$ :: object SuperCallQualified
tests.tca.SuperCallQualified.type :: constructor Trallala :: object SuperCallQualified
B.super.type :: constructor Object :: class B
tests.tca.SuperCallQualified.type :: method bam :: class B
tests.tca.SuperCallQualified.B :: method m :: object SuperCallQualified
tests.tca.SuperCallQualified.B :: constructor B :: object SuperCallQualified
target.super.type :: constructor Annotation :: class target
invocations.super.type :: constructor Annotation :: class invocations

==============================
SuperCallQualified
==============================
Running TCA
tests.tca.Lalala :: List(trait Lalala, class Object, class Any)
callgraph.annotation.invocations :: List(class invocations, trait StaticAnnotation, class Annotation, class Object, class Any)
tests.tca.Trallala :: List(class Trallala, class Object, class Any)
tests.tca.SuperCallQualified.B :: List(class B, class Object, class Any)
callgraph.annotation.target :: List(class target, trait StaticAnnotation, class Annotation, class Object, class Any)
tests.tca.SuperCallQualified.type :: List(object SuperCallQualified, trait Lalala, class Trallala, class Object, class Any)

